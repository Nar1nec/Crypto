[tool.poetry]
name = "crypto"
version = "0.1.0"
description = ""
authors = ["Nar1nec <nar1nec@mail.ru>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.120.0"
uvicorn = { version = "^0.38.0", extras = ["standard"] }
sqlalchemy = { version = "^2.0.44", extras = ["asyncio"] }
asyncpg = "^0.30.0"
httpx = "^0.28.1"
pydantic = { version = "^2.12.3", extras = ["dotenv"] }
python-dotenv = "^1.2.1"
pydantic-settings = "^2.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-asyncio = "^1.2.0"
mypy = "^1.18.2"
ruff = "^0.14.2"
respx = "^0.22.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
target-version = "py313"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",
    "B008",
    "F401"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
pretty = true


[[tool.mypy.overrides]]
module = [
    "sqlalchemy.*",
    "fastapi.*",
    "uvicorn.*",
    "httpx.*",
    "prices.tests.*"
]
ignore_missing_imports = true
disable_error_code = ["no-untyped-def","import-not-found"]